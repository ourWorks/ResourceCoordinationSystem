{"version":3,"sources":["webpack:///./src/api/arrange.js","webpack:///./src/api/call_help.js","webpack:///./src/utils/get_time.js","webpack:///./src/api/leader.js","webpack:///./src/api/volunteer.js"],"names":["__webpack_exports__","request","url","method","data","__WEBPACK_IMPORTED_MODULE_0__utils_request__","__webpack_require__","cid","parseTime","time","cFormat","arguments","length","format","date","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof___default","parseInt","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","replace","result","key","value","response","localStorage","setItem","longitude","latitude","orgName","address","volunteerId","orgId","startTime","endTime","ondueState","mask","bandage","stretcher","depressor","antihistamine","water","food","tent","car","boat","id","getItem"],"mappings":"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","file":"static/js/0.bebda7e7cc0ca2aa71cc.js","sourcesContent":["import request from '@/utils/request'\n\n//获取未删除市民、未删除志愿者、未删除领导的数量\nexport function getMembersNum() {\n  return request({\n      url: '/getMembersNum',\n      method: 'post',\n      // data: data,\n    }\n  )\n}\n\n//获取所有“待救援”的求助表单的需求数组\nexport function getTotalDemandNum(data) {\n  return request({\n      url: '/getTotalDemandNum',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n//获取组织的物资概况数组\nexport function getOrgResourceNum(data) {\n  return request({\n      url: '/getOrgResourceNum',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n//获取排班信息\nexport function showArrange(data) {\n  return request({\n      url: '/showArrange',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n//开始排班\nexport function beginArrange(data) {\n  return request({\n      url: '/beginArrange',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/arrange.js","import request from '@/utils/request'\n\n/////////////////////////////////////////////发起救助模块/////////////////////////////////////\nexport function handleHelp(data) {\n  return request({\n      url: '/call',\n      method: 'post',\n      data: data,\n      //不知道为什么刷新前全局的拦截不生效，所以先进行这个设置吧，为了校验身份\n      //   headers: {\n      //     Authorization: localStorage.getItem(\"token\"),\n      //     id: localStorage.getItem(\"id\")\n      //   }\n    }\n  )\n}\n\nexport function showHelp(data) {\n  return request({\n      url: '/call/helpList',\n      method: 'post',\n      data: data,\n      //不知道为什么刷新前全局的拦截不生效，所以先进行这个设置吧，为了校验身份\n      //   headers: {\n      //     Authorization: localStorage.getItem(\"token\"),\n      //     id: localStorage.getItem(\"id\")\n      //   }\n    }\n  )\n}\n\nexport function editHelp(data) {\n  return request({\n      url: '/call/editHelp',\n      method: 'post',\n      data: {cid: data},\n    }\n  )\n}\n\nexport function updateHelp(data) {\n  return request({\n      url: '/call/updateHelp',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\nexport function delHelp(data) {\n  return request({\n      url: '/call/delHelp',\n      method: 'post',\n      data: {cid: data},\n    }\n  )\n}\n/////////////////////////////////////////////发起救助模块/////////////////////////////////////\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/call_help.js","export function parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null\n  }\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\n  let date\n  if (typeof time === 'object') {\n    date = time\n  } else {\n    if (('' + time).length === 10) time = parseInt(time) * 1000\n    date = new Date(time)\n  }\n  const formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  }\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n    let value = formatObj[key]\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\n    if (result.length > 0 && value < 10) {\n      value = '0' + value\n    }\n    return value || 0\n  })\n  return time_str\n}\n\nexport function formatTime(time, option) {\n  time = +time * 1000\n  const d = new Date(time)\n  const now = Date.now()\n\n  const diff = (now - d) / 1000\n\n  if (diff < 30) {\n    return '刚刚'\n  } else if (diff < 3600) { // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前'\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前'\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前'\n  }\n  if (option) {\n    return parseTime(time, option)\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分'\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/get_time.js","import request from '@/utils/request'\n\n//一、管理员设置本地组织的存贮信息\nexport function setLocalOrg(response) {\n  localStorage.setItem(\"org_longitude\",response.data.longitude);\n  localStorage.setItem(\"org_latitude\",response.data.latitude);\n  localStorage.setItem(\"org_orgName\",response.data.orgName);\n  // localStorage.setItem(\"org_orgId\",response.data.orgId);\n  localStorage.setItem(\"org_address\",response.data.address);\n}\n\n//二、判断本市民是否为某个组织的领导\nexport function isLeader(data) {\n  return request({\n      url: '/isLeader',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\nexport function addOrg(data) {\n  return request({\n      url: '/addOrg',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\nexport function updateOrg(data) {\n  return request({\n      url: '/updateOrg',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\nexport function delOrg(data) {\n  return request({\n      url: '/delOrg',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n////////////////////////////////////////////////////领导管理/////////////////////////////////////////////\n//获取所有领导信息\nexport function getOrgLeaders(data) {\n  return request({\n      url: '/getOrgLeaders',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n//新增领导\nexport function addLeader(data) {\n  return request({\n      url: '/addLeader',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n//删除领导（市民作为领导退出组织）\nexport function quitOrgAsLeader(data) {\n  return request({\n      url: '/quitOrgAsLeader',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n////////////////////////////////////////////////////领导管理/////////////////////////////////////////////\n\n////////////////////////////////////////////////////志愿者管理/////////////////////////////////////////////\n//获取所有志愿者信息\nexport function getOrgVolunteers(data) {\n  return request({\n      url: '/getOrgVolunteers',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n//新增志愿者\nexport function addVolunteer(data) {\n  return request({\n      url: '/addVolunteer',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n//删除志愿者（市民作为志愿者退出组织）\nexport function quitOrgAsVolunteer(data) {\n  return request({\n      url: '/quitOrgAsVolunteer',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n////////////////////////////////////////////////////志愿者管理/////////////////////////////////////////////\n\n\nexport function getOrgVolunteersPage(data) {\n  return request({\n      url: '/getOrgVolunteersPage',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/leader.js","import request from '@/utils/request'\n\n//设置本地志愿者的存贮信息\nexport function setLocalVolunteer(response) {\n  localStorage.setItem(\"volunteerId\", response.data.volunteerId);\n  localStorage.setItem(\"v_longitude\", response.data.longitude);\n  localStorage.setItem(\"v_latitude\", response.data.latitude);\n  localStorage.setItem(\"v_orgId\", response.data.orgId);\n  localStorage.setItem(\"startTime\", response.data.startTime);\n  localStorage.setItem(\"endTime\", response.data.endTime);\n  localStorage.setItem(\"ondueState\", response.data.ondueState);\n}\n\n//判断本市民是否为某个组织的志愿者\nexport function isVolunteer(data) {\n  return request({\n      url: '/isVolunteer',\n      method: 'post',\n      data: data,\n    }\n  )\n}\n\n//成为某个组织的志愿者，需要额外传入id\nexport function addOrUpdateVolunteer(data) {\n  return request({\n      url: '/addOrUpdateVolunteer',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\n//根据orgId获取组织信息\nexport function orgInfo(data) {\n  return request({\n      url: '/orgInfo',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\n\n//在本地存储市民的医疗资源Medical Resource\nexport function setLocalVMR(response) {\n  localStorage.setItem(\"v_mask\", response.data.mask);\n  localStorage.setItem(\"v_bandage\", response.data.bandage);\n  localStorage.setItem(\"v_stretcher\", response.data.stretcher);\n  localStorage.setItem(\"v_depressor\", response.data.depressor);\n  localStorage.setItem(\"v_antihistamine\", response.data.antihistamine);\n}\n\n//在本地存储市民的日用资源Medical Resource\nexport function setLocalVDR(response) {\n  localStorage.setItem(\"v_water\", response.data.water);\n  localStorage.setItem(\"v_food\", response.data.food);\n  localStorage.setItem(\"v_tent\", response.data.tent);\n  localStorage.setItem(\"v_car\", response.data.car);\n  localStorage.setItem(\"v_boat\", response.data.boat);\n}\n\n//获取本市民的医疗资源信息和日用资源信息\nexport function getMedicalResource() {\n  return request({\n      url: '/getMedicalResource',\n      method: 'post'\n    }\n  )\n}\n\nexport function getDailyResource() {\n  return request({\n      url: '/getDailyResource',\n      method: 'post'\n    }\n  )\n}\n\n//获取本市民的医疗资源信息和日用资源信息\nexport function updateMedicalResource(data) {\n  return request({\n      url: '/updateMedicalResource',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\nexport function updateDailyResource(data) {\n  return request({\n      url: '/updateDailyResource',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\n/////////////////////////////////////////////志愿者模块的选取任务///////////////////////////////////////////////////\n//获取所有“待救援”或“已安排”的任务\nexport function getWaitingOrArrangedTask(data) {\n  return request({\n      url: '/getWaitingOrArrangedTask',\n      method: 'post',\n      data: {\n        cid: data,\n        id: localStorage.getItem(\"id\")\n      },\n    }\n  )\n}\n\n/////////////////////////////////////////////志愿者模块的选取任务///////////////////////////////////////////////////\n\n//获取某个志愿者完成的求助表单，任务状态是“已完成”,并且不是自己的\nexport function myVolunteerTask() {\n  return request({\n      url: '/myVolunteerTask',\n      method: 'post',\n      data: {\n        volunteerId: localStorage.getItem(\"volunteerId\")\n      }\n    }\n  )\n}\n\n//获取某个志愿者完成的求助表单，任务状态是“已完成”,并且不是自己的\nexport function beginVolunteerTask(data) {\n  return request({\n      url: '/beginVolunteerTask',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\n//获取某个志愿者完成的求助表单，任务状态是“已完成”,并且不是自己的\nexport function changeHelpState(data) {\n  return request({\n      url: '/changeHelpState',\n      method: 'post',\n      data: data\n    }\n  )\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/volunteer.js"],"sourceRoot":""}